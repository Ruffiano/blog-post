// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: article.sql

package db

import (
	"context"
	"database/sql"
	"time"
)

const createArticle = `-- name: CreateArticle :one
INSERT INTO article (
    user_id,
    title,
    content,
    updated_at
) VALUES (
    $1, $2, $3, $4
) RETURNING id, user_id, title, content, updated_at, created_at
`

type CreateArticleParams struct {
	UserID    int64     `json:"user_id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	UpdatedAt time.Time `json:"updated_at"`
}

func (q *Queries) CreateArticle(ctx context.Context, arg CreateArticleParams) (Article, error) {
	row := q.db.QueryRowContext(ctx, createArticle,
		arg.UserID,
		arg.Title,
		arg.Content,
		arg.UpdatedAt,
	)
	var i Article
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Title,
		&i.Content,
		&i.UpdatedAt,
		&i.CreatedAt,
	)
	return i, err
}

const getArticle = `-- name: GetArticle :one
SELECT id, user_id, title, content, updated_at, created_at FROM article
WHERE user_id =$1 LIMIT 1
`

func (q *Queries) GetArticle(ctx context.Context, userID int64) (Article, error) {
	row := q.db.QueryRowContext(ctx, getArticle, userID)
	var i Article
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Title,
		&i.Content,
		&i.UpdatedAt,
		&i.CreatedAt,
	)
	return i, err
}

const updateArticle = `-- name: UpdateArticle :one
UPDATE article
SET
   title = COALESCE($1, title),
   content = COALESCE($2, content),
   updated_at = COALESCE($3, updated_at)
WHERE
   user_id = $4
RETURNING id, user_id, title, content, updated_at, created_at
`

type UpdateArticleParams struct {
	Title     sql.NullString `json:"title"`
	Content   sql.NullString `json:"content"`
	UpdatedAt sql.NullTime   `json:"updated_at"`
	UserID    int64          `json:"user_id"`
}

func (q *Queries) UpdateArticle(ctx context.Context, arg UpdateArticleParams) (Article, error) {
	row := q.db.QueryRowContext(ctx, updateArticle,
		arg.Title,
		arg.Content,
		arg.UpdatedAt,
		arg.UserID,
	)
	var i Article
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Title,
		&i.Content,
		&i.UpdatedAt,
		&i.CreatedAt,
	)
	return i, err
}
